basePath: /
definitions:
  config.Site:
    properties:
      abstract:
        description: 简介
        type: string
      content:
        description: 内容
        type: string
      footer:
        description: 尾部信息
        type: string
      href:
        description: 点击go的跳转链接
        type: string
      icon:
        description: 首页的图标
        type: string
      iconHref:
        description: 图标链接
        type: string
      title:
        description: 网站名称
        type: string
    type: object
  doc_api.DocCreateRequest:
    properties:
      content:
        type: string
      parentID:
        type: integer
      title:
        type: string
    required:
    - content
    - title
    type: object
  models.RoleModel:
    properties:
      createdAt:
        description: 添加时间
        type: string
      id:
        description: 主键id
        type: integer
      isSystem:
        description: 是否是系统角色
        type: boolean
      pwd:
        description: 角色密码
        type: string
      title:
        description: 角色的名称
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  models.UserModel:
    properties:
      addr:
        description: 地址
        type: string
      avatar:
        description: 头像
        type: string
      createdAt:
        description: 添加时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 主键id
        type: integer
      ip:
        description: ip
        type: string
      lastLogin:
        description: 用户最后登录时间
        type: string
      nickName:
        description: 昵称
        type: string
      roleID:
        description: 用户对应的角色
        type: integer
      roleModel:
        allOf:
        - $ref: '#/definitions/models.RoleModel'
        description: 用户角色信息
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户名
        type: string
    type: object
  res.Code:
    enum:
    - 0
    - 7
    - 9
    type: integer
    x-enum-comments:
      ErrCode: 系统错误
      ValidCode: 校验错误
    x-enum-varnames:
    - SUCCESS
    - ErrCode
    - ValidCode
  res.ListResponse-models_UserModel:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/models.UserModel'
        type: array
    type: object
  res.ListResponse-role_api_RoleListResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/role_api.RoleListResponse'
        type: array
    type: object
  res.Response:
    properties:
      code:
        $ref: '#/definitions/res.Code'
      data: {}
      msg:
        type: string
    type: object
  role_api.RoleCreateRequest:
    properties:
      ID:
        type: integer
      Pwd:
        type: string
      Title:
        maxLength: 16
        minLength: 2
        type: string
    required:
    - Title
    type: object
  role_api.RoleListResponse:
    properties:
      DocCount:
        description: 角色拥有的文档数
        type: integer
      UserCount:
        description: 角色下的用户数
        type: integer
      createdAt:
        description: 添加时间
        type: string
      id:
        description: 主键id
        type: integer
      isSystem:
        description: 是否是系统角色
        type: boolean
      pwd:
        description: 角色密码
        type: string
      title:
        description: 角色的名称
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  user_api.UserCreateRequest:
    properties:
      nickName:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      roleID:
        description: 角色id
        type: integer
      userName:
        description: 用户名
        type: string
    required:
    - password
    - roleID
    - userName
    type: object
  user_api.UserInfoResponse:
    properties:
      addr:
        description: 地址
        type: string
      avatar:
        description: 头像
        type: string
      createdAt:
        description: 添加时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 主键id
        type: integer
      ip:
        description: ip
        type: string
      lastLogin:
        description: 用户最后登录时间
        type: string
      nickName:
        description: 昵称
        type: string
      role:
        type: string
      roleID:
        description: 用户对应的角色
        type: integer
      roleModel:
        allOf:
        - $ref: '#/definitions/models.RoleModel'
        description: 用户角色信息
      updatedAt:
        description: 更新时间
        type: string
      userName:
        type: string
    type: object
  user_api.UserLoginRequest:
    properties:
      password:
        type: string
      userName:
        type: string
    required:
    - password
    - userName
    type: object
  user_api.UserUpdateInfoRequest:
    properties:
      avatar:
        type: string
      nickName:
        type: string
    type: object
  user_api.UserUpdatePasswordRequest:
    properties:
      oldPwd:
        type: string
      password:
        type: string
    required:
    - oldPwd
    - password
    type: object
  user_api.UserUpdateRequest:
    properties:
      id:
        type: integer
      nickName:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      roleID:
        description: 角色id
        type: integer
    required:
    - id
    type: object
host: 127.0.0.1:8082
info:
  contact: {}
  description: API文档
  title: 文档项目api文档
  version: "1.0"
paths:
  /api/docs:
    post:
      description: 创建文档，创建成功之后，data=文档id
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/doc_api.DocCreateRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建文档
      tags:
      - 文档管理
  /api/docs/{id}:
    get:
      description: 文档内容
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 文档内容
      tags:
      - 文档管理
  /api/image:
    post:
      consumes:
      - multipart/form-data
      description: 上传图片
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 文件上传
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 上传图片
      tags:
      - 图片管理
  /api/images:
    delete:
      description: 删除图片
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除图片
      tags:
      - 图片管理
  /api/login:
    post:
      description: 用户登录
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户登录
      tags:
      - 用户管理
  /api/logout:
    get:
      description: 用户注销
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户注销
      tags:
      - 用户管理
  /api/roles:
    get:
      description: 角色列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-role_api_RoleListResponse'
              type: object
      summary: 角色列表
      tags:
      - 角色管理
    post:
      description: 创建角色
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/role_api.RoleCreateRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建角色
      tags:
      - 角色管理
    put:
      description: 更新角色
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/role_api.RoleCreateRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新角色
      tags:
      - 角色管理
  /api/site:
    get:
      description: 站点配置查询
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/config.Site'
              type: object
      summary: 站点配置查询
      tags:
      - 站点配置
  /api/users:
    delete:
      description: 删除用户
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: idList
        in: body
        name: IDList
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除用户
      tags:
      - 用户管理
    get:
      description: 用户列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: roleID
        type: integer
      - in: query
        name: sort
        type: string
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse-models_UserModel'
              type: object
      summary: 用户列表
      tags:
      - 用户管理
    post:
      description: 创建用户，只能管理员创建
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserCreateRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建用户
      tags:
      - 用户管理
    put:
      description: 管理员更新用户信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 管理员更新用户信息
      tags:
      - 用户管理
  /api/users_info:
    get:
      description: 用户信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/user_api.UserInfoResponse'
              type: object
      summary: 用户信息
      tags:
      - 用户管理
    put:
      description: 用户更新自己的信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserUpdateInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户更新自己的信息
      tags:
      - 用户管理
  /api/users_password:
    put:
      description: 用户修改密码
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserUpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户修改密码
      tags:
      - 用户管理
swagger: "2.0"
